{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\Evangadi projects\\\\phase 3\\\\week 4\\\\react-components\\\\src\\\\Components\\\\Rating\\\\Rating.js\";\nimport React, { Component } from \"react\";\n\nclass Rating extends Component {\n  constructor() {\n    super();\n\n    this.increment = () => {\n      // This works, but it is prone to error\n      // During times where React doesn't imidiatelly accept the request of this function, it wouldn't work  \n      // this.setState({\n      //   value: this.state.value + 1\n      // });\n      // To check that this one fails, lets write something that should be dependent on the updated value \n      // this.setState({\n      //   value: this.state.value + 1\n      // });\n      // this.setState({\n      //   value: this.state.value - 1\n      // });\n      // If we use an updater function to pass the current state instead, it will work \n      // this.setState((state) => {\n      //   return {\n      //     value: state.value + 1,\n      //   };\n      // });\n      // this.setState((state) => {\n      //   return {\n      //     value: state.value - 2,\n      //   };\n      // });\n      // For the purpose of our example, lets just make the increment function arr the rating by one \n      this.setState(state => {\n        return {\n          value: state.value + 1\n        };\n      });\n    };\n\n    this.decrement = () => {\n      // The same thing for our decrement function \n      // Lets make it so that it decreases the rating by 1 \n      this.setState(state => {\n        return {\n          value: state.value - 1\n        };\n      });\n    };\n\n    this.state = {\n      value: 0\n    };\n  } // Not that we are using an arrow function in here\n  // If we just use the standard function, we will need to bind the finction inside our constructor. The arrow function does the binding for us automatically \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rating block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Your rated this product : \", this.state.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Rating;","map":{"version":3,"sources":["C:/Users/Owner/Desktop/Evangadi projects/phase 3/week 4/react-components/src/Components/Rating/Rating.js"],"names":["React","Component","Rating","constructor","increment","setState","state","value","decrement","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAE7BE,EAAAA,WAAW,GAAE;AACX;;AADW,SAWbC,SAXa,GAWD,MAAM;AAChB;AACA;AAEE;AACA;AACA;AAGF;AAEE;AACA;AACA;AACA;AACA;AACA;AAEF;AACE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEF;AACE,WAAKC,QAAL,CAAeC,KAAD,IAAW;AACvB,eAAO;AACLC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADhB,SAAP;AAGD,OAJD;AAKH,KAhDY;;AAAA,SAiDbC,SAjDa,GAiDD,MAAM;AAEhB;AACA;AACA,WAAKH,QAAL,CAAeC,KAAD,IAAW;AACvB,eAAO;AACLC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADhB,SAAP;AAGD,OAJD;AAKD,KA1DY;;AAEV,SAAKD,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAGF,GAP4B,CAU7B;AACA;;;AAoDAE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKL,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,iDAAgC,KAAKF,KAAL,CAAWC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAxE4B;;AA2E/B,eAAeL,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Rating extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n     this.state = {\r\n      value: 0,\r\n    };   \r\n  }\r\n\r\n\r\n  // Not that we are using an arrow function in here\r\n  // If we just use the standard function, we will need to bind the finction inside our constructor. The arrow function does the binding for us automatically \r\n\r\n  increment = () => {\r\n    // This works, but it is prone to error\r\n    // During times where React doesn't imidiatelly accept the request of this function, it wouldn't work  \r\n    \r\n      // this.setState({\r\n      //   value: this.state.value + 1\r\n      // });\r\n\r\n\r\n    // To check that this one fails, lets write something that should be dependent on the updated value \r\n\r\n      // this.setState({\r\n      //   value: this.state.value + 1\r\n      // });\r\n      // this.setState({\r\n      //   value: this.state.value - 1\r\n      // });\r\n\r\n    // If we use an updater function to pass the current state instead, it will work \r\n      // this.setState((state) => {\r\n      //   return {\r\n      //     value: state.value + 1,\r\n      //   };\r\n      // });\r\n\r\n      // this.setState((state) => {\r\n      //   return {\r\n      //     value: state.value - 2,\r\n      //   };\r\n      // });\r\n\r\n    // For the purpose of our example, lets just make the increment function arr the rating by one \r\n      this.setState((state) => {\r\n        return {\r\n          value: state.value + 1,\r\n        };\r\n      });\r\n  };\r\n  decrement = () => {\r\n\r\n    // The same thing for our decrement function \r\n    // Lets make it so that it decreases the rating by 1 \r\n    this.setState((state) => {\r\n      return {\r\n        value: state.value - 1,\r\n      };\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Rating block</h2> \r\n        <button onClick={this.increment}>Increment</button>\r\n        <button onClick={this.decrement}>Decrement</button>\r\n        <div>Your rated this product : {this.state.value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rating;"]},"metadata":{},"sourceType":"module"}